# Define a headless service named "sts-service"
apiVersion: v1
kind: Service
metadata:
  name: sts-service
spec:
  selector:
    app: my-app  # Select pods with label "app: my-app"
  clusterIP: None  # Create a headless service (no cluster IP)
  ports:
    - name: mysql-port
      protocol: TCP
      port: 3306
      targetPort: 3306

# Define a StatefulSet named "web-statefulset"
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web-statefulset
spec:
  serviceName: sts-service  # Use the headless service for network identity
  replicas: 3  # Create 3 replicas of the pods
  selector:
    matchLabels:
      app: my-app  # Select pods with label "app: my-app"
  template:
    metadata:
      labels:
        app: my-app  # Apply label "app: my-app" to the pod
    spec:
      containers:
        - name: mysql-container
          image: mysql:latest  # Use the latest MySQL image
          ports:
            - containerPort: 3306  # Open port 3306 inside the container
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: mypassword  # Set the root password for MySQL
          volumeMounts:
            - name: mysql-volume
              mountPath: /var/lib/mysql  # Mount storage volume
  volumeClaimTemplates:
    - metadata:
        name: mysql-volume
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName:  managed-nfs-storage  # Use NFS storage class
        resources:
          requests:
            storage: 2Gi  # Request 2GB of storage
